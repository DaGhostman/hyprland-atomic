[private]
default:
    @just --list

# Internal alias to execute the `atomic` command
[private]
atomic *args:
    #!/bin/bash
    just -f /etc/Justfile {{ args }}

# Bootstrap the current installation by installing brew & requested flatpaks.
[group('Bootstrap')]
bootstrap:
    @just install-taps
    @just copy-default-configs
    @just enable-spotlight-wallpapers

# Install brew
[group('Brew')]
[private]
install-brew:
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

[group('Brew')]
[private]
install-taps:
    /home/linuxbrew/.linuxbrew/bin/brew install gdb eza valgrind yazi zellij hyperfine luajit luarocks starship 

# Install brew packages `atomic brew ..`
[group('Brew')]
brew *pkgs:
    /home/linuxbrew/.linuxbrew/bin/brew install {{ pkgs }}

# Install flatpak packages
[group('Flatpak')]
flatpak *pkgs:
    #!/usr/bin/bash
    function flatpakif() {
        set -eoux pipefail
        if [[ -z "$(which flatpak)" ]]; then
            echo -e "flatpak is not installed";
        else
            flatpak $@
        fi
    }
    flatpakif install flathub --assumeyes --user {{ pkgs }}

[group('Bootc')]
target variant="base" version="42":
    sudo bootc switch --apply quay.io/ddimitrov/hyprland-atomic:{{ version }}-{{ variant }}
    sudo rpm-ostree rebase ostree-remote-registry:quay:quay.io/ddimitrov/hyprland-atomic:{{version}}-{{variant}}

[group('Bootstrap')]
copy-default-configs:
    #!/usr/bin/bash
    if [[ ! -f ~/.config/hypr/hyprland.conf ]]; then
        cp /usr/share/hypr/hyprland.conf ~/.config/hypr/hyprland.conf
    else
        echo "Hyprland configuration exists in home, skipping"
    fi
    if [[ ! -f ~/.config/hypr/hypridle.conf ]]; then
        cp /usr/share/hypr/hypridle.conf ~/.config/hypr/hypridle.conf
    else
        echo "Hyptidle configuration exists in home, skipping"
    fi
    if [[ ! -f ~/.config/hypr/hyprlock.conf ]]; then
        cp /usr/share/hypr/hyprlock.conf ~/.config/hypr/hyprlock.conf
    else
        echo "Hyprlock configuration exists in home, skipping"
    fi
    if [[ ! -f ~/.config/ghostty/config ]]; then
        mkdir ~/.config/ghostty
        cp /usr/share/ghostty/config ~/.config/ghostty/config
    else
        echo "Ghostty configuration exists in home, skipping"
    fi
    if [[ ! -f ~/.config/rofi/config.rasi ]]; then
        mkdir ~/.config/rofi
        echo "@theme \"/usr/share/rofi/themes/hyprland-atomic.rasi\"" > ~/.config/rofi/config.rasi
    else
        echo "Rofi configuration exists in home, skipping"
    fi

# Switch from the ISP-provided DNS servers to those provided by Cloudflare
[group('Bootstrap')]
use-cloudflare-dns position:
    resolvectl dns {{ position }} 1.1.1.1 1.0.0.1

# Installs EasyEffects preset from https://github.com/JackHack96/EasyEffects-Presets
[group('Bootstrap')]
install-easyeffects-presets:
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/JackHack96/PulseEffects-Presets/master/install.sh)"

# Enable Spotlight wallpaper rotation scripts that download the images, convert them and then apply them randomly at intervals
[group('Bootstrap')]
enable-spotlight-wallpapers:
    systemctl enable --now --user download-wallpapers.timer
    systemctl enable --now --user rotate-wallpaper.timer
    /usr/local/bin/download-spotlight-wallpapers
    /usr/local/bin/rotate-spotlight-wallpaper
