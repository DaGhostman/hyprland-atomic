#!/bin/bash

# Install flatpaks that were predefined as part of the distribution'
# 
install_flatpaks() {
    if [[ -z $(which flatpak) ]]; then
        echo -e "Flatpak is not installed, skipping flatpack packages"
        exit 0
    fi

    flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
    flatpak remote-add --user --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

    readarray -t INCLUDED_PACKAGES < <(jq -r ".flatpak | sort | unique[]" /etc/extra/packages.json)

    # Install Packages
    if [[ "${#INCLUDED_PACKAGES[@]}" -gt 0 ]]; then
        flatpak install -y flathub \
            --system "${INCLUDED_PACKAGES[@]}"
    else
        echo "No flatpak packages to install."

    fi

    flatpak override --filesystem=/usr/share/icons/:ro
}


# Install flatpaks that were predefined as part of the distribution'
# 
install_brew() {
    readarray -t INCLUDED_PACKAGES < <(jq -r ".brew | sort | unique[]" /etc/extra/packages.json)

    # Install Packages
    if [[ "${#INCLUDED_PACKAGES[@]}" -gt 0 ]]; then
        _USERNAME=$(getent passwd | grep 1000 | awk -F: '{print $1}')
        sudo -u $_USERNAME HOME=${HOME:="/home/$(ls /home | grep -i $_USERNAME | head -n1)"} /home/linuxbrew/.linuxbrew/bin/brew install \
            "${INCLUDED_PACKAGES[@]}"
	unset _USERNAME
    fi
}

# Common configurations for the system
#
configure_system() {
    # Configure CloudFlare DNS
    resolvectl dns 3 1.1.1.1 1.0.0.1
    if [[ -z $(cat /etc/resolv.conf | grep -i DNSOverTls) ]]; then
        echo 'DNSOverTls=yes' >> /etc/resolv.conf
        echo 'Cache=yes' >> /etc/resolv.conf
    fi
}

configure_system
install_flatpaks
install_brew
